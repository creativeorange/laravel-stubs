<?php

namespace Creativeorange\LaravelStubs\Console\Run;

use Illuminate\Console\Command;
use Illuminate\Support\Str;
use Symfony\Component\Console\Input\InputArgument;

class RunFactory extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $name = 'run:factory';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Run a factory';

    protected $signature = 'run:factory
                                {model= : The model to run the factory for}
                                {amount= : The amount of records generated by the factory}';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return mixed
     */
    public function handle()
    {

        try {

            $model = $this->getModelOption();
        }
        catch (\Exception $e) {

            return $this->error($e->getMessage());
        }

        $amount = $this->getAmountOption();

        try {

            factory($model, $amount)->create();
        }
        catch (\InvalidArgumentException $e) {
            return $this->error('Factory does not exist, ' . $e->getMessage());
        }

        return $this->info('Successfully ran factory');
    }

    protected function getModelOption()
    {

        if (!$this->argument('model')) {
            $model = $this->ask('Model');
        }
        else {
            $model = $this->argument('model');
        }

        if (!Str::startsWith($model, 'App\\')) {
            $model = 'App\\' . $model;
        }

        if (!\class_exists($model)) {
            throw new \Exception('Model does not exist');
        }

        return $model;
    }

    protected function getAmountOption()
    {


        if (!$this->argument('amount')) {
            $amount = (int) $this->ask('Amount');
        }
        else {
            $amount = (int) $this->argument('amount');
        }

        return $amount;
    }

    protected function getArguments()
    {
        return [
            ['model', InputArgument::OPTIONAL, 'The model to run the factory for'],
            ['amount', InputArgument::OPTIONAL, 'The amount of records generated by the factory'],
        ];
    }
}